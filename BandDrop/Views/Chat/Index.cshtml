@model BandDrop.ViewModels.AudioFileVM
<!DOCTYPE html>
<html>
<head>
    <title>pChat &mdash; Private Chatroom</title>
    <script src="https://js.pusher.com/4.1/pusher.min.js"></script>
    <script src="https://connect.soundcloud.com/sdk/sdk-3.3.0.js"></script>
    <script>
        $(document).ready(function () {
            let currentContact = null; // Holds current contact
            let currentconversationChannel = null;
            let conversationChannelName = null;
            let newMessageTpl =
                `<li class="list-group-item">
                  <div id="msg-{{id}}" class="row __chat__par__ ">
                    <div class="__chat__">
                     <h6>{{name}}</h6>
                     <p class="pl-4">{{body}}</p>
                    </div>
                 </div>
                </li>`;
            let newMessageTplContact =
                `<li class="list-group-item " >
                  <div id="msg-{{id}}" class="row __chat__par__ ">
                    <div class="__chat__  " style="width: 18rem;">
                     <h5 class="card-header text-info text-left">{{name}}</h5>
                     <p class="text-primary pl-4 bg-light">{{body}}</p>
                    </div>
                 </div>
                </li>`;

            const pusher = new Pusher('de9851a0744ee8227c97', {
                authEndpoint: '@Url.Action("AuthForChannel", "Auth")',
                cluster: 'us2'
            });
            pusher.connection.bind('connected', function () {
                socketId = pusher.connection.socket_id;
            });

            if (conversationChannelName) {
                pusher.unsubscribe(conversationChannelName);
            }
            currentconversationChannel = pusher.subscribe('private-chat-' + '537')
            bind_group_events();
         
            $(".user__item").click(function (e) {
                e.preventDefault();
                currentContact = {
                    id: $(this).data('contact-id'),
                    name: $(this).data('contact-name'),
                };

                if (conversationChannelName) {
                    pusher.unsubscribe(conversationChannelName);
                }

                conversationChannelName = getConvoChannel(
                    (@ViewBag.currentUser.id * 1),
                    (currentContact.id * 1)
                );

                currentconversationChannel = pusher.subscribe(conversationChannelName);

                bind_client_events();

                $('#contacts').find('li').removeClass('active');

                $('#contacts .contact-' + currentContact.id).find('li').addClass('active');
                getChat(currentContact.id);
            });
            function getConvoChannel(user_id, contact_id) {
                if (user_id > contact_id) {
                    return 'private-chat-' + contact_id + '-' + user_id;
                }

                return 'private-chat-' + user_id + '-' + contact_id;
            }

            $('#sendMessage').on('click', function () {
                var object = new Object();
                if (currentContact == null) {
                    
                    $.post('@Url.Action("SendGroupMessage","Chat")', {
                        message: $('#msg_box').val(),
                        socket_id: socketId,
                        data: object
                    }).done(function (data) {
                        //display the message immediately on the view of the sender
                        displayMessage(data);
                        $('#msg_box').val('');
                    });
                }
                else {
                    $.post('@Url.Action("SendMessage", "Chat")', {
                        message: $('#msg_box').val(),
                        contact: currentContact.id,
                        socket_id: socketId,
                    }).done(function (data) {
                        //display the message immediately on the view of the sender
                        displayMessage(data);
                        $('#msg_box').val('');

                    });
                }
            });

            // get chat data
            function getChat(contact_id) {
                var link = '@Url.Action("Conversations", "Chat")/';
                var object = new Object();
                object.id = contact_id
                $.ajax({
                    type: "GET",
                    url: link,
                    data: object,
                    dataType: "json"
                })

                    .done(function (resp) {
                        var chat_data = resp.data || [];
                        loadChat(chat_data);
                    });
            }

            //load chat data into view
            function loadChat(chat_data) {

                chat_data.forEach(function (data) {

                    displayMessage(data);
                });

                $('.chat__body').show();
                $('.__no__chat__').hide();
            }

            function displayMessage(message_obj) {
                const msg_id = message_obj.id;
                const msg_body = message_obj.message;
                const msg_name = message_obj.sender_name;
                const msg_time = message_obj.created_at;

                let template = $(newMessageTpl).html();

                template = template.replace("{{id}}", msg_id);
                template = template.replace("{{body}}", msg_body);
                template = template.replace("{{name}}", msg_name);

                // need to properly format before use
                //template = template.replace("{{time}}", msg_time);

                template = $(template);

                if (message_obj.sender_id == @ViewBag.currentUser.id ) {
                    template.find('.__chat__').addClass('from__chat');
                } else {
                    template.find('.__chat__').addClass('receive__chat');
                }

                if (message_obj.status == 1) {
                    template.find('.delivery-status').show();
                }

                $('.chat__main').append(template);
            }
            function bind_client_events() {
                currentconversationChannel.bind("client-is-typing", function (data) {
                    if (data.user_id == currentContact.id &&
                        data.contact_id == @ViewBag.currentUser.id  ) {

                        $('#typerDisplay').text(currentContact.name + ' is typing...');

                        $('.chat__typing').fadeIn(100, function () {
                            $('.chat__type__body').addClass('typing_display__open');
                        }).delay(1000).fadeOut(300, function () {
                            $('.chat__type__body').removeClass('typing_display__open');
                        });
                    }
                });
                currentconversationChannel.bind("new_message", function (msg) {
                    if (msg.receiver_id == @ViewBag.currentUser.id ) {
                        displayMessage(msg);
                    }
                });
                currentconversationChannel.bind("message_delivered", function (msg) {
                    $('#msg-' + msg.id).find('.delivery-status').show();
                });
            }
            function bind_group_events() {
                getGroupChat(0);
                currentconversationChannel.bind("new_message", function (msg) {
                    if (msg.receiver_id == 0 ) {
                        displayMessage(msg);
                    }
                });
            }
            function getGroupChat() {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GroupConversations","Chat")',
                    dataType: "json"
                })

                    .done(function (resp) {
                        var chat_data = resp.data || [];
                        loadChat(chat_data);
                    });
            }
            //User is typing
            var isTypingCallback = function () {
                currentconversationChannel.trigger("client-is-typing", {
                    user_id: @ViewBag.currentUser.id,
                    contact_id: currentContact.id,
                });
            };

            $('#msg_box').on('keyup', isTypingCallback);

        });  
        
    </script>
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-inverse bg-dark mt-2 pl-0 ml-0 shadow">
        <div class="container-fluid" style="display: flex; height: 100%; overflow: hidden;">
            <div class="navbar-header text-primary">
                <a class="navbar-brand text-white" href="#">@ViewBag.currentUser.BandName - @ViewBag.currentUser.name </a>
            </div>
            <ul class="nav navbar-nav navbar-right">
                <li ><a href="#" class="text-white">Log Out</a></li>
            </ul>
        </div>
    </nav>
    <!-- / Navigation Bar -->
    <div class="container position-relative w-100 p-0 pt-4">
        <div class="row w-100">
            <div class="col-xs-12 col-md-2 h-100 pr-1 mr-3" >
                <aside class="main visible-md visible-lg h-100 shadow">
                    @*<div class="row pr-2" style="height: 100%">*@
                    <div class="panel w-100 h-100 rounded">
                        
                        <div class="panel panel-default users__bar">
                            <div class="panel-heading users__heading bg-dark mb-2 shadow">
                                @ViewBag.currentUser.BandName
                            </div>
                            <div class="bandImage">
                            @if(ViewBag.Band.BandImagePath != null)
                            {
                            <img src=@Url.Content(ViewBag.Band.BandImagePath) alt="bandImage" class="card-img-top" />
                            }
                            <div class="p-1">
                                <button class="btn btn-dark mw-100 shadow" id="openModal">Select Band Image</button>
                                <div id="modalSelect" class="modal bg-transparent">
                                    <div class="modal-content">
                                        <span class="close">&times;</span>
                                         @using (Html.BeginForm("SetBandImage", "Bands", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                           {
                                        <div class="form-group">
                                            <div class="custom-file panel-text">
                                                @Html.LabelFor(a => a.File, "Select image", htmlAttributes: new { @class = "control-label w-100 pl-3" })
                                            </div>
                                            <div class="col-md-2">
                                                @Html.TextBoxFor(a => a.File, "Select Track", new { type = "file", @class = "btn-outline-primary" })
                                            </div>
                                            <div class="input-group-append pl-3">
                                                <input type="submit" id="btnUpload" class="btn btn-outline-primary" value="Upload" />
                                            </div>
                                        </div>
                                            }
                                          </div>
                                </div>
                            </div>
                            
                        </div>
                            <div class="__no__chat__">
                                <p class="text-primary pl-2 pt-1">Select bandmate</p>
                            </div>
                            <a class="users__body tableText">
                                <ul id="contacts" class="mh-80 mt-2">
                                    @foreach (var user in @ViewBag.allUsers)
                                    {
                                        <a class="user__item contact-@user.id" href="#" data-contact-id="@user.id" data-contact-name="@user.name">
                                            <li>
                                                <span class="text-center text-dark pt-2">@user.name</span>
                                                <div class="status-bar"></div>
                                            </li>
                                        </a>
                                    }
                                </ul>
                            </a>
                            
                        </div>
                        
                    </div>
                    @*</div>*@
                </aside>
            </div>
            <div id="chat_window"  class="col-xs-12 mw-100 col-md-4 chat__body pb-0 mr-4 shadow" style="overflow-y: scroll;">
                <div class="card-group small-shadow rounded pb-2">
                    <ul class="chat__main list-group-flush w-100"></ul>
                </div>
                <div class="chat__type__body fixed-bottom">
                    <div class="chat__type ">
                        <textarea class="pb-2" id="msg_box" placeholder="Type your message"></textarea>
                        <button class="btn btn-dark" id="sendMessage">Send</button>
                    </div>
                </div>
                <div class="chat__typing">
                    <span id="typerDisplay"></span>
                </div>
            </div>
            <div class="col-xs-12 col-md-5 mw-100 mh-80 shadow p-0" style="overflow-y: scroll; max-height: 60vh">
               
                    <table id="dataTable" class="table table-light bg-wizardry w-auto">

                        <thead class="thead-dark position-static tableHead shadow mb-4 font-weight-light">
                            <tr>
                                <th style="font-weight: normal;">Name</th>
                                <th style="font-weight: normal;">Play Audio</th>
                            </tr>
                        </thead>
                
                    <tbody>
                        @foreach (var item in ViewBag.Songs)
        {
                <tr>
                    <td class="tableText align-content-between">@item.Name</td>
                    <td>
                        <audio controls>
                            <source src="@Url.Content(@item.FilePath)" type="audio/ogg">
                        </audio>
                    </td>
                </tr>
}
                    </tbody>
                </table>
                    <div class="panel   position-absolute">
                        @using (Html.BeginForm("UploadAudio", "AudioFiles", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                <div class="form-group">
                    <div class="custom-file panel-text">
                        @Html.LabelFor(a => a.File, "Select track to upload:", htmlAttributes: new { @class = "control-label w-100 pl-3" })
                    </div>
                    <div class="col-md-2">
                        @Html.TextBoxFor(a => a.File, "Select Track", new { type = "file"})
                    </div>
                    <div class="form-group pl-3 pr-3">
                        @Html.LabelFor(a => a.Name, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(a => a.Name, new { htmlAttributes = new { @class = "form-control  w-100" } })
                            @Html.ValidationMessageFor(a => a.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="input-group-append pl-3">
                        <input type="submit" id="btnUpload" class="btn btn-dark" value="Upload" />
                    </div>

                </div>
}
                    </div>

            </div>

        </div>
    </div>
    <script>
        $(document).ready(function () {
            function scrollToBottom(id) {
               $('#'+id).scrollTop($('#'+id)[0].scrollHeight);
            }
            scrollToBottom("chat_window");
        });
        $(".openModalHidden")
            .on("mouseenter", function () {
                $("openModaHidden").show();
            })
            .on("mouseleave", function () {
                $("button").hide();
            });
        // Get the modal
        var modal = document.getElementById('modalSelect');

        // Get the button that opens the modal
        var btn = document.getElementById("openModal");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];
        btn.onclick = function () {
            modal.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
        
    </script>
</body>
</html>

